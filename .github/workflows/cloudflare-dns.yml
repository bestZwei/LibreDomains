name: Update Cloudflare DNS

on:
  pull_request:
    paths:
      - 'domains/*.json'

jobs:
  validate-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Validate JSON format and check for duplicates
        id: validate
        run: |
          SUCCESS=true
          for file in $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'domains/'); do
            if ! jq empty $file; then
              echo "Invalid JSON format in $file"
              SUCCESS=false
            fi
            domain=$(jq -r '.name' $file)
            if grep -q "\"name\": \"$domain\"" domains/ --exclude $file; then
              echo "Duplicate DNS entry for $domain in $file"
              SUCCESS=false
            fi
          done
          echo "success=$SUCCESS" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Deploy to Cloudflare
        id: deploy
        if: env.success == 'true'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          python deploy_to_cloudflare.py

      - name: Create deployment comment
        if: always()
        run: |
          COMMENT="**Deployment Status**: ${{ steps.deploy.outcome }}\n\n"
          COMMENT+="Files changed:\n"
          for file in $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'domains/'); do
            COMMENT+="* $file\n"
          done
          echo $COMMENT > deployment_comment.txt

      - name: Post comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: require('fs').readFileSync('deployment_comment.txt', 'utf8')
            })